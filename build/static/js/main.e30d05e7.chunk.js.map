{"version":3,"sources":["Components/MapData.js","Components/Marks.js","Components/ChoroplethMap.js","Components/DataTable.js","Components/TabPanel.js","Components/InformationTab.js","App.js","index.js"],"names":["useData","useState","data","setData","useEffect","json","then","topojsonData","feature","objects","countries","projection","geoEqualEarth","path","geoPath","colorScale","scaleThreshold","domain","range","schemePurples","colorCheck","vaxCountryData","countryData","i","length","properties","name","toLowerCase","includes","totalVaccinations","Marks","vaxCountries","push","country","className","fill","d","type","features","map","stroke","stroke-width","ChoroplethMap","filteredData","width","height","useStyles","makeStyles","tableContainerDiv","display","flexDirection","alignItems","justifyContent","searchbar","marginTop","marginBottom","padding","borderRadius","fontSize","border","textAlign","outline","tableContainer","minWidth","maxWidth","maxHeight","table","headCell","paddingLeft","paddingRight","paddingTop","paddingBottom","backgroundColor","bodyCell","DataTable","rows","handleChange","classes","placeholder","onChange","Paper","elevation","TableContainer","Table","TableHead","TableRow","TableCell","align","TableBody","element","box","TabPanel","props","children","value","index","role","hidden","id","aria-labelledby","Box","paper","flexGrow","tabs","idCreate","InformationTab","search","setSearch","filter","total","countryName","dataPush","setValue","Tabs","centered","indicatorColor","event","newValue","Tab","label","target","App","axios","get","response","catch","error","console","log","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e30d05e7.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\nimport { json } from 'd3';\nimport { feature } from 'topojson';\n\nconst jsonUrl =\n    'https://cdn.jsdelivr.net/npm/world-atlas@2/countries-110m.json'\n\nexport const useData = () => {\n    const [data, setData] = useState(null);\n\n\n    useEffect(() => {\n        json(jsonUrl).then(topojsonData => {\n            setData(feature(topojsonData, topojsonData.objects.countries));\n        });\n    }, []);\n    \n    return data;\n    };","import { geoEqualEarth, geoPath, scaleThreshold,  schemePurples } from 'd3';\n\nconst projection = geoEqualEarth()\n\nconst path = geoPath(projection);\n\n// Color Key\nconst colorScale = scaleThreshold()\n    .domain([1000, 10000, 100000, 1000000, 10000000, 100000000])\n    .range(schemePurples[7]);\n\n// Checks data for the country - sets the color on map\nconst colorCheck = (feature, vaxCountryData, countryData) => {\n    for (let i = 0; i < vaxCountryData.length; i++) {\n        if(feature.properties.name.toLowerCase().includes(vaxCountryData[i].toLowerCase())) {\n            return colorScale(countryData[i].totalVaccinations)\n        }\n        else {\n            continue;\n        }\n    }\n    return 'black';\n}\n\n\nfunction Marks({ data, countryData}) {\n\n    let vaxCountries = [];\n\n    // Match the datasets\n    for (let i = 0; i < countryData.length; i++) {\n        vaxCountries.push(countryData[i].country.toLowerCase());\n    }\n\n\n    // Wait for dataset to load\n    if (!data[0]) {\n        return (\n            <pre>Loading...</pre>\n        )\n    }\n\n    return (\n    <g className=\"marks\">\n        <path fill='#EFEFEF' d={path({type: 'Sphere'})}/>\n        {data[0].features.map((feature, i) => {\n            return(\n                <path \n                fill={colorCheck(feature, vaxCountries, countryData)}\n                stroke='#EFEFEF' \n                stroke-width='1' \n                d={path(feature)}/>\n            )\n        })}\n    </g>\n    )\n}\n\nexport default Marks\n\n\n\n\n\n\n","import React from 'react'\nimport { useData } from './MapData';\nimport Marks from './Marks';\n\nconst width = 1000;\nconst height = 500;\n\nfunction ChoroplethMap({ filteredData }) {\n\n    const data = [useData()];\n\n    // Wait for dataset to load\n    if (!data) {\n        return (\n            <pre>Loading...</pre>\n        )\n    }\n\n\n    return (\n        <svg width={width} height={height}>\n            <Marks data={data} countryData={filteredData}/>\n        </svg>\n    )\n}\n\nexport default ChoroplethMap\n","import React from 'react';\nimport './ChoroplethMap';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles({\n    tableContainerDiv: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: '100vw',\n        height: '95vh',\n    },\n\n    searchbar: {\n        display: 'block',\n        width: '100%',\n        marginTop: '2em',\n        marginBottom: '2em',\n        padding: '10px',\n        borderRadius: '16px 16px 16px 16px',\n        fontSize: '15px',\n        border: '.5px solid black',\n        textAlign: 'center',\n        outline: 'none',\n    },\n\n    tableContainer: {\n        minWidth: 300,\n        maxWidth: 500,\n        maxHeight: 750,\n    },\n\n    table: {\n        minWidth: 300,\n    },\n\n    headCell: {\n        paddingLeft: '3em',\n        paddingRight: '3em',\n        paddingTop: '1.5em',\n        paddingBottom: '1.5em',\n        backgroundColor: '#fafafa',\n    },\n    bodyCell: {\n        paddingLeft: '3em',\n        paddingRight: '3em',\n    },\n  });\n\nfunction DataTable({rows, handleChange}) {\n\n    const classes = useStyles();\n\n    return (\n        <div className={classes.tableContainerDiv}>\n                <form>\n                    <input className={classes.searchbar} type='text' placeholder='Search Country' onChange={handleChange}/>\n                </form>\n                <Paper elevation={9}>\n                    <TableContainer className={classes.tableContainer}>\n                        <Table className={classes.table}>\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell className={classes.headCell}>Country</TableCell>\n                                    <TableCell className={classes.headCell} align='left'>Total Vaccinations</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                            {rows.map( element => {\n                                return(\n                                    <TableRow>\n                                        <TableCell className={classes.bodyCell}>{element.country}</TableCell>\n                                        <TableCell className={classes.bodyCell} align='left'>{element.totalVaccinations}</TableCell>\n                                    </TableRow>\n                                )\n                            })}\n                            </TableBody>\n                        </Table>\n                    </TableContainer>\n                </Paper>\n            </div>\n    )\n}\n\nexport default DataTable\n","import React from 'react'\nimport Box from '@material-ui/core/Box';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n    box: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        height: '95vh',\n    },\n\n});\n\nfunction TabPanel(props) {\n    const {children, value, index} = props;\n    const classes = useStyles();\n    return(\n        <div\n            role='tabpanel'\n            hidden={value !== index}\n            id={`tabpanel-${index}`}\n            aria-labelledby={`tab-${index}`}\n        >\n            {value === index && (\n                <Box className={classes.box}>\n                    {children}\n                </Box>\n            )}\n        </div>\n    )\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n}\n\nexport default TabPanel\n","import React from 'react';\nimport { useState } from 'react';\nimport DataTable from './DataTable';\nimport ChoroplethMap from './ChoroplethMap';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TabPanel from './TabPanel';\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\n\nconst useStyles = makeStyles({\n    paper: {\n        flexGrow: 1,\n    },\n\n    tabs: {\n        height: '5vh',\n    },\n\n    \n});\n\nfunction idCreate(index) {\n    return {\n        id:`tab-${index}`,\n        'aria-controls': `tabpanel-${index}`\n    }\n}\n\nfunction createData(country, totalVaccinations) {\n    return {country, totalVaccinations};\n}\n\nlet rows = []\n\nfunction InformationTab({ data }) {\n\n    const [search, setSearch] = useState('');\n\n    // Form Handle - Search for country\n    const handleChange = event => {\n        setSearch(event.target.value);\n        rows = [];\n    }\n\n    // Filtered Search - Returns country that was searched\n    const filteredCountry = data.filter(data => \n        data.country.toLowerCase().includes(search.toLowerCase())\n    )\n\n    // Filters out continent data, finds most recent data, pushes data to table row\n    filteredCountry.filter(data => !data['iso_code'].includes(\"OWID\")).map(data => { \n        let total;\n        let countryName = data[\"country\"];\n\n        for (let i = data[\"data\"].length - 1; i >= 0; i--) {\n            if (\"total_vaccinations\" in data[\"data\"][i]) {\n                total = data[\"data\"][i][\"total_vaccinations\"];\n                break;\n            } else {\n                total = 'DNE';\n            }\n        }\n\n        let dataPush = createData(countryName, total);\n        rows.push(dataPush);\n\n        return null;\n      })\n\n    // Tab Value State\n    const [value, setValue] = useState(0);\n    const onClick = (event, newValue) => {\n        setValue(newValue);\n    }\n\n    const classes = useStyles();\n\n\n    return (\n        <div>\n            <Paper className={classes.paper}>\n                <Tabs centered className={classes.tabs} indicatorColor='primary' value={value} onChange={onClick}>\n                    <Tab label='Map' {...idCreate(0)}/>\n                    <Tab label='Table' {...idCreate(1)}/>\n                </Tabs>\n            </Paper>\n            <TabPanel index={0} value={value}>\n                <ChoroplethMap filteredData={rows}/>\n            </TabPanel>\n            <TabPanel index={1} value={value}>                \n                <DataTable rows={rows} handleChange={handleChange}/>\n            </TabPanel>\n        </div>\n    )\n}\n\nexport default InformationTab\n","import React from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport {useState, useEffect} from 'react';\nimport InformationTab from './Components/InformationTab';\n\n\nfunction App() {\n\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    axios.get('https://raw.githubusercontent.com/owid/covid-19-data/master/public/data/vaccinations/vaccinations.json')\n    .then(response => {\n      setData(response.data);\n    })\n    .catch(error => {\n      console.log(error);\n    });\n  }, [])\n\n\n  return (\n    <div className=\"App\">\n      <InformationTab\n        data={data}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}